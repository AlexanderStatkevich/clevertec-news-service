plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.1'
    id 'io.spring.dependency-management' version '1.1.0'
}


group = 'ru.clevertec'
version = '1.0.0'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation(
            'org.springframework.boot:spring-boot-starter-data-jpa',
            'com.google.code.findbugs:jsr305:3.0.2',
            'org.springframework.boot:spring-boot-starter-security',
            'io.jsonwebtoken:jjwt:0.9.1',
            'javax.xml.bind:jaxb-api:2.3.1',
            'org.springframework.cloud:spring-cloud-starter-openfeign',
            'org.springframework.boot:spring-boot-starter-hateoas',
            'org.springframework.boot:spring-boot-starter-validation',
            'org.springframework.cloud:spring-cloud-starter-config',
            'org.springframework.boot:spring-boot-starter-web',
            'org.springframework.boot:spring-boot-starter-cache',
            'org.springframework.boot:spring-boot-starter-data-redis',
            'org.springframework.cloud:spring-cloud-config-client',
            'org.liquibase:liquibase-core',
            "org.mapstruct:mapstruct:${mapstructVersion}",
            'ru.clevertec:starter-logging:1.0.0',
            'ru.clevertec:starter-exception-handler:1.0.0',
            'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
    )

    compileOnly 'org.projectlombok:lombok'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    runtimeOnly 'org.postgresql:postgresql'

    annotationProcessor(
            'org.projectlombok:lombok',
            "org.mapstruct:mapstruct-processor:${mapstructVersion}",
            'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    )

    testImplementation(
            'org.springframework.boot:spring-boot-starter-test',
            'org.springframework.boot:spring-boot-testcontainers',
            'org.springframework.security:spring-security-test',
            'org.testcontainers:junit-jupiter',
            'org.testcontainers:postgresql'
    )

    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

compileJava {
    options.compilerArgs = [
            '-Amapstruct.defaultComponentModel=spring',
            '-Amapstruct.unmappedTargetPolicy=IGNORE'
    ]
}


jar {
    enabled = false
}

tasks.named('test') {
    useJUnitPlatform()
}


